// Code generated by go-swagger; DO NOT EDIT.

package default_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "mustrum/server/models"
)

// ControllersDefaultControllerAllPixelsGetOKCode is the HTTP code returned for type ControllersDefaultControllerAllPixelsGetOK
const ControllersDefaultControllerAllPixelsGetOKCode int = 200

/*ControllersDefaultControllerAllPixelsGetOK 2d colour array of all pixels

swagger:response controllersDefaultControllerAllPixelsGetOK
*/
type ControllersDefaultControllerAllPixelsGetOK struct {

	/*
	  In: Body
	*/
	Payload models.Pixelmap `json:"body,omitempty"`
}

// NewControllersDefaultControllerAllPixelsGetOK creates ControllersDefaultControllerAllPixelsGetOK with default headers values
func NewControllersDefaultControllerAllPixelsGetOK() *ControllersDefaultControllerAllPixelsGetOK {

	return &ControllersDefaultControllerAllPixelsGetOK{}
}

// WithPayload adds the payload to the controllers default controller all pixels get o k response
func (o *ControllersDefaultControllerAllPixelsGetOK) WithPayload(payload models.Pixelmap) *ControllersDefaultControllerAllPixelsGetOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the controllers default controller all pixels get o k response
func (o *ControllersDefaultControllerAllPixelsGetOK) SetPayload(payload models.Pixelmap) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ControllersDefaultControllerAllPixelsGetOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = models.Pixelmap{}
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}
