// Code generated by go-swagger; DO NOT EDIT.

package default_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// ControllersDefaultControllerAllPixelsGetHandlerFunc turns a function with the right signature into a controllers default controller all pixels get handler
type ControllersDefaultControllerAllPixelsGetHandlerFunc func(ControllersDefaultControllerAllPixelsGetParams) middleware.Responder

// Handle executing the request and returning a response
func (fn ControllersDefaultControllerAllPixelsGetHandlerFunc) Handle(params ControllersDefaultControllerAllPixelsGetParams) middleware.Responder {
	return fn(params)
}

// ControllersDefaultControllerAllPixelsGetHandler interface for that can handle valid controllers default controller all pixels get params
type ControllersDefaultControllerAllPixelsGetHandler interface {
	Handle(ControllersDefaultControllerAllPixelsGetParams) middleware.Responder
}

// NewControllersDefaultControllerAllPixelsGet creates a new http.Handler for the controllers default controller all pixels get operation
func NewControllersDefaultControllerAllPixelsGet(ctx *middleware.Context, handler ControllersDefaultControllerAllPixelsGetHandler) *ControllersDefaultControllerAllPixelsGet {
	return &ControllersDefaultControllerAllPixelsGet{Context: ctx, Handler: handler}
}

/*ControllersDefaultControllerAllPixelsGet swagger:route GET /all_pixels default_controller controllersDefaultControllerAllPixelsGet

ControllersDefaultControllerAllPixelsGet controllers default controller all pixels get API

*/
type ControllersDefaultControllerAllPixelsGet struct {
	Context *middleware.Context
	Handler ControllersDefaultControllerAllPixelsGetHandler
}

func (o *ControllersDefaultControllerAllPixelsGet) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewControllersDefaultControllerAllPixelsGetParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
