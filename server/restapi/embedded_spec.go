// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "A third cut at writing the code initial formed in web.py for the PiMoroni UnicornHAT\n",
    "title": "Mustrum",
    "version": "0.1.0"
  },
  "host": "192.168.1.88:8080",
  "paths": {
    "/all_pixels": {
      "get": {
        "tags": [
          "default_controller"
        ],
        "operationId": "controllers.default_controller.all_pixels_get",
        "responses": {
          "200": {
            "description": "2d colour array of all pixels",
            "schema": {
              "$ref": "#/definitions/pixelmap"
            }
          }
        }
      }
    },
    "/dot/{x}": {
      "put": {
        "description": "Paint a single pixel",
        "tags": [
          "default_controller"
        ],
        "operationId": "controllers.default_controller.dot_x_put",
        "parameters": [
          {
            "name": "colour",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/colour"
            }
          },
          {
            "type": "number",
            "format": "integer",
            "description": "x component of pixel",
            "name": "x",
            "in": "path",
            "required": true
          },
          {
            "type": "number",
            "format": "integer",
            "description": "y component of pixel",
            "name": "y",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/monoframe/{pixelmap}": {
      "put": {
        "description": "Shows single frame",
        "tags": [
          "default_controller"
        ],
        "operationId": "controllers.default_controller.monoframe_pixelmap_put",
        "parameters": [
          {
            "type": "string",
            "description": "map of pixel",
            "name": "pixelmap",
            "in": "path",
            "required": true
          },
          {
            "name": "colour",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/colour"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/monoline": {
      "put": {
        "description": "Sets single line",
        "tags": [
          "default_controller"
        ],
        "operationId": "controllers.default_controller.monoline_put",
        "parameters": [
          {
            "type": "number",
            "format": "integer",
            "description": "location of line",
            "name": "line",
            "in": "query"
          },
          {
            "type": "string",
            "description": "bitmap of pixels to show",
            "name": "pixelmap",
            "in": "query"
          },
          {
            "name": "colour",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/colour"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/show": {
      "get": {
        "description": "Show all set pixels",
        "tags": [
          "default_controller"
        ],
        "operationId": "controllers.default_controller.show_get",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    }
  },
  "definitions": {
    "colour": {
      "type": "object",
      "properties": {
        "blue": {
          "type": "integer",
          "maximum": 255
        },
        "green": {
          "type": "integer",
          "maximum": 255
        },
        "red": {
          "type": "integer",
          "maximum": 255
        }
      }
    },
    "pixelmap": {
      "type": "array",
      "items": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/colour"
        }
      }
    }
  }
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "A third cut at writing the code initial formed in web.py for the PiMoroni UnicornHAT\n",
    "title": "Mustrum",
    "version": "0.1.0"
  },
  "host": "192.168.1.88:8080",
  "paths": {
    "/all_pixels": {
      "get": {
        "tags": [
          "default_controller"
        ],
        "operationId": "controllers.default_controller.all_pixels_get",
        "responses": {
          "200": {
            "description": "2d colour array of all pixels",
            "schema": {
              "$ref": "#/definitions/pixelmap"
            }
          }
        }
      }
    },
    "/dot/{x}": {
      "put": {
        "description": "Paint a single pixel",
        "tags": [
          "default_controller"
        ],
        "operationId": "controllers.default_controller.dot_x_put",
        "parameters": [
          {
            "name": "colour",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/colour"
            }
          },
          {
            "type": "number",
            "format": "integer",
            "description": "x component of pixel",
            "name": "x",
            "in": "path",
            "required": true
          },
          {
            "type": "number",
            "format": "integer",
            "description": "y component of pixel",
            "name": "y",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/monoframe/{pixelmap}": {
      "put": {
        "description": "Shows single frame",
        "tags": [
          "default_controller"
        ],
        "operationId": "controllers.default_controller.monoframe_pixelmap_put",
        "parameters": [
          {
            "type": "string",
            "description": "map of pixel",
            "name": "pixelmap",
            "in": "path",
            "required": true
          },
          {
            "name": "colour",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/colour"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/monoline": {
      "put": {
        "description": "Sets single line",
        "tags": [
          "default_controller"
        ],
        "operationId": "controllers.default_controller.monoline_put",
        "parameters": [
          {
            "type": "number",
            "format": "integer",
            "description": "location of line",
            "name": "line",
            "in": "query"
          },
          {
            "type": "string",
            "description": "bitmap of pixels to show",
            "name": "pixelmap",
            "in": "query"
          },
          {
            "name": "colour",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/colour"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/show": {
      "get": {
        "description": "Show all set pixels",
        "tags": [
          "default_controller"
        ],
        "operationId": "controllers.default_controller.show_get",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    }
  },
  "definitions": {
    "colour": {
      "type": "object",
      "properties": {
        "blue": {
          "type": "integer",
          "maximum": 255,
          "minimum": 0
        },
        "green": {
          "type": "integer",
          "maximum": 255,
          "minimum": 0
        },
        "red": {
          "type": "integer",
          "maximum": 255,
          "minimum": 0
        }
      }
    },
    "pixelmap": {
      "type": "array",
      "items": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/colour"
        }
      }
    }
  }
}`))
}
